@model WriteGradeViewModel
@inject IStudentReadRepository _studentReadRepository
@inject ISubCourseReadRepository _subCourseReadRepository
@{
    ViewData["Title"] = "Update Grade";
}

<div class="row">
    <div class="col-md-6 mx-auto">
        <form method="post" asp-area="Teacher" asp-controller="Grades" asp-action="UpdateGrade">
            <div class="card">
                <div class="card-header">Not Güncelle</div>
                <div class="card-body">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Score">Not</label>
                        <input asp-for="Score" type="number" min="0" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label asp-for="ExamNumber">Sınav Numarası</label>
                        <input asp-for="ExamNumber" type="number" min="1" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label asp-for="StudentId">Öğrenci</label>
                        <select asp-for="StudentId" class="form-control">
                            <option value="" selected disabled>Select a student</option>
                            @foreach (var item in ViewData["StudentList"] as List<Student>)
                            {
                                var isSelected = Model.StudentId == item.Id;
                                <option value="@item.Id" selected="@isSelected">@item.FirstName @item.LastName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="SubCourseId">Ders</label>
                        <select asp-for="SubCourseId" class="form-control">
                            <option value="" selected disabled>Select a sub course</option>
                            @foreach (var item in ViewData["SubCourseList"] as List<SubCourse>)
                            {
                                var isSelected = Model.SubCourseId == item.Id;
                                <option value="@item.Id" selected="@isSelected">@item.Code</option>
                            }
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Güncelle</button>
                </div>
            </div>
        </form>
    </div>
</div>
